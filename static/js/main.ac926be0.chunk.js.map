{"version":3,"sources":["app/routes.js","features/topics/topicsSlice.js","features/quizzes/quizzesSlice.js","features/cards/cardsSlice.js","components/NewQuizForm.js","data/icons.js","components/NewTopicForm.js","features/topics/Topics.js","features/topics/Topic.js","features/cards/Card.js","features/quizzes/Quiz.js","features/quizzes/Quizzes.js","app/App.js","app/store.js","index.js"],"names":["ROUTES","newQuizRoute","quizRoute","id","quizzesRoute","newTopicRoute","topicRoute","topicsRoute","topicsSlice","createSlice","name","initialState","topics","reducers","addTopic","state","action","payload","topicId","icon","quizIds","addQuizId","quizId","push","selectTopics","actions","quizzesSlice","quizzes","addQuiz","cardIds","selectQuizzes","cardsSlice","cards","addCard","cardId","front","back","selectCard","NewQuizForm","useState","setName","setCards","setTopicId","history","useHistory","useSelector","dispatch","useDispatch","updateCardState","index","side","value","newCards","slice","onSubmit","e","preventDefault","length","forEach","card","uuidv4","quiz","addQuizAddQuizId","onChange","currentTarget","placeholder","Object","values","map","topic","className","onClick","filter","i","removeCard","concat","ALL_ICONS","url","NewTopicForm","setIcon","uniqueId","type","required","defaultValue","disabled","hidden","Topics","to","src","alt","Topic","useParams","quizzesForTopic","Card","flipped","setFlipped","Quiz","console","log","Quizzes","App","activeClassName","path","TopicsRoutes","QuizRoutes","match","useRouteMatch","configureStore","reducer","topicsReducer","quizzesReducer","cardsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"4LASeA,EATA,CACbC,aAAc,iBAAM,gBACpBC,UAAW,SAACC,GAAD,yBAAoBA,IAC/BC,aAAc,iBAAM,YACpBC,cAAe,iBAAM,eACrBC,WAAY,SAACH,GAAD,wBAAmBA,IAC/BI,YAAa,iBAAM,Y,QCHRC,EAAcC,YAAY,CACnCC,KAAM,SACNC,aAAc,CAACC,OAAQ,IACvBC,SAAU,CACNC,SAAU,SAACC,EAAOC,GAAY,IAAD,EACGA,EAAOC,QAA9BC,EADoB,EACpBA,QAASR,EADW,EACXA,KAAMS,EADK,EACLA,KAOtB,OANAJ,EAAMH,OAAOM,GAAW,CACtBf,GAAIe,EACJR,KAAMA,EACNS,OACAC,QAAS,IAEJL,GAETM,UAAW,SAACN,EAAOC,GAAY,IAAD,EACAA,EAAOC,QAA1BC,EADmB,EACnBA,QAASI,EADU,EACVA,OAChBP,EAAMH,OAAOM,GAASE,QAAQG,KAAKD,OAKhCE,EAAe,SAACT,GAC3B,OAAOA,EAAMH,OAAOA,Q,EAGiBJ,EAAYiB,QAApCX,E,EAAAA,SAAUO,E,EAAAA,UACVb,IAAf,QC1BWkB,EAAejB,YAAY,CACpCC,KAAM,UACNC,aAAc,CAACgB,QAAS,IACxBd,SAAU,CACNe,QAAS,SAACb,EAAOC,GAAY,IAAD,EACiBA,EAAOC,QAAzCK,EADiB,EACjBA,OAAQZ,EADS,EACTA,KAAMQ,EADG,EACHA,QAASW,EADN,EACMA,QAO9B,OANAd,EAAMY,QAAQL,GAAU,CACpBnB,GAAImB,EACJZ,KAAMA,EACNQ,QAASA,EACTW,QAASA,GAENd,MAeJW,GADYA,EAAaD,QAAzBG,QACAF,EAAf,SACaI,EAAgB,SAAAf,GAAK,OAAIA,EAAMY,QAAQA,SC7BvCI,EAAatB,YAAY,CAClCC,KAAM,QACNC,aAAc,CAACqB,MAAO,IACtBnB,SAAU,CACNoB,QAAS,SAAClB,EAAOC,GAAY,IAAD,EACQA,EAAOC,QAA/BiB,EADgB,EAChBA,OAAQC,EADQ,EACRA,MAAOC,EADC,EACDA,KACvBrB,EAAMiB,MAAME,GAAU,CAClB/B,GAAI+B,EACJC,MAAOA,EACPC,KAAMA,OAMPH,EAAYF,EAAWN,QAAvBQ,QACAF,IAAf,QACaM,EAAa,SAAAtB,GAAK,OAAIA,EAAMiB,MAAMA,O,OCVhC,SAASM,IAAe,IAAD,EACZC,mBAAS,IADG,mBAC7B7B,EAD6B,KACvB8B,EADuB,OAEVD,mBAAS,IAFC,mBAE7BP,EAF6B,KAEtBS,EAFsB,OAGNF,mBAAS,IAHH,mBAG7BrB,EAH6B,KAGpBwB,EAHoB,KAI9BC,EAAUC,cACVhC,EAASiC,YAAYrB,GACrBsB,EAAWC,cAmCXC,EAAkB,SAACC,EAAOC,EAAMC,GACpC,IAAMC,EAAWpB,EAAMqB,QACvBD,EAASH,GAAOC,GAAQC,EACxBV,EAASW,IAGX,OACE,oCACE,mDACA,uBAAME,SA1CW,SAACC,GAEpB,GADAA,EAAEC,iBACkB,IAAhB9C,EAAK+C,OAAT,CAIA,IAAM5B,EAAU,GAIhBG,EAAM0B,SAAQ,SAACC,GAChB,IAAIzB,EAAS0B,cACb/B,EAAQN,KAAKW,GACbY,EAASb,EAAQ,CAAEC,OAAQA,EAAQC,MAAOwB,EAAKxB,MAAOC,KAAMuB,EAAKvB,WAIhEU,EFb4B,SAACe,GAAU,IAC/BvC,EAAoBuC,EAApBvC,OAAQJ,EAAY2C,EAAZ3C,QAChB,OAAO,SAAC4B,GACNA,EAASpB,EAAaD,QAAQG,QAAQiC,IACtCf,EAASzB,EAAU,CAAEC,OAAQA,EAAQJ,QAASA,MESvC4C,CAAiB,CAACxC,OAAQsC,cAAUlD,KAAMA,EAAMQ,QAASA,EAASW,QAASA,KAGpFc,EAAQpB,KAAKvB,EAAOI,kBAsBlB,UACE,uBACED,GAAG,YACHgD,MAAOzC,EACPqD,SAAU,SAACR,GAAD,OAAOf,EAAQe,EAAES,cAAcb,QACzCc,YAAY,eAEd,yBACE9D,GAAG,aACH4D,SAAU,SAACR,GAAD,OAAOb,EAAWa,EAAES,cAAcb,QAC5Cc,YAAY,QAHd,UAKE,wBAAQd,MAAM,GAAd,mBACCe,OAAOC,OAAOvD,GAAQwD,KAAI,SAACC,GAAD,OACzB,wBAAuBlB,MAAOkB,EAAMlE,GAApC,SACGkE,EAAM3D,MADI2D,EAAMlE,UAKtB6B,EAAMoC,KAAI,SAACT,EAAMV,GAAP,OACT,sBAAiBqB,UAAU,kBAA3B,UACE,uBACEnE,GAAE,qBAAgB8C,GAClBE,MAAOnB,EAAMiB,GAAOd,MACpB4B,SAAU,SAACR,GAAD,OACRP,EAAgBC,EAAO,QAASM,EAAES,cAAcb,QAElDc,YAAY,UAGd,uBACE9D,GAAE,oBAAe8C,GACjBE,MAAOnB,EAAMiB,GAAOb,KACpB2B,SAAU,SAACR,GAAD,OACRP,EAAgBC,EAAO,OAAQM,EAAES,cAAcb,QAEjDc,YAAY,SAGd,wBACEM,QAAS,SAAChB,GAAD,OAtDF,SAACA,EAAGN,GACrBM,EAAEC,iBACFf,EAAST,EAAMwC,QAAO,SAACb,EAAMc,GAAP,OAAaxB,IAAUwB,MAoDnBC,CAAWnB,EAAGN,IAC9BqB,UAAU,qBAFZ,2BAnBQrB,MA2BZ,sBAAKqB,UAAU,oBAAf,UACE,wBAAQC,QAnEM,SAAChB,GACrBA,EAAEC,iBACFf,EAAST,EAAM2C,OAAO,CAAExC,MAAO,GAAIC,KAAM,OAiEnC,wBACA,0DC5GH,IA2CMwC,EAAY,CACvB,CACEC,IA5CF,sFA6CEnE,KAAM,QAER,CACEmE,IA9CF,yFA+CEnE,KAAM,WAER,CACEmE,IAhDF,sFAiDEnE,KAAM,QAER,CACEmE,IAlDF,0FAmDEnE,KAAM,YAER,CACEmE,IApDF,wFAqDEnE,KAAM,UAER,CACEmE,IAtDF,yFAuDEnE,KAAM,WAER,CACEmE,IAxDF,2FAyDEnE,KAAM,QAER,CACEmE,IA1DF,uFA2DEnE,KAAM,SAER,CACEmE,IA5DF,uFA6DEnE,KAAM,SAER,CACEmE,IA9DF,4FA+DEnE,KAAM,QAER,CACEmE,IAhEF,qFAiEEnE,KAAM,OAER,CACEmE,IAlEF,0FAmEEnE,KAAM,YAER,CACEmE,IApEF,yFAqEEnE,KAAM,WAER,CACEmE,IAtEF,wFAuEEnE,KAAM,UAER,CACEmE,IAxEF,0FAyEEnE,KAAM,YAER,CACEmE,IA1EF,sFA2EEnE,KAAM,QAER,CACEmE,IA5EF,6FA6EEnE,KAAM,eAER,CACEmE,IA9EF,uFA+EEnE,KAAM,SAER,CACEmE,IAhFF,4FAiFEnE,KAAM,cAER,CACEmE,IAlFF,qFAmFEnE,KAAM,OAER,CACEmE,IApFF,sFAqFEnE,KAAM,SCtHK,SAASoE,IAAgB,IAAD,EACbvC,mBAAS,IADI,mBAC9B7B,EAD8B,KACxB8B,EADwB,OAEbD,mBAAS,IAFI,mBAE9BpB,EAF8B,KAExB4D,EAFwB,KAG/BpC,EAAUC,cACVE,EAAWC,cAkBjB,OACE,kCACE,uBAAMO,SAlBW,SAACC,GAEpB,GADAA,EAAEC,iBACkB,IAAhB9C,EAAK+C,OAAT,CAGA,IAAIuB,EAAWpB,cACfd,EAAShC,EAAS,CACdI,QAAS8D,EACTtE,KAAMA,EACNS,KAAMA,KAIVwB,EAAQpB,KAAKvB,EAAOO,iBAKlB,UACE,oBAAI+D,UAAU,SAAd,gCACA,sBAAKA,UAAU,eAAf,UACE,uBACEnE,GAAG,aACH8E,KAAK,OACL9B,MAAOzC,EACPqD,SAAU,SAACR,GAAD,OAAOf,EAAQe,EAAES,cAAcb,QACzCc,YAAY,eAEd,yBACEF,SAAU,SAACR,GAAD,OAAOwB,EAAQxB,EAAES,cAAcb,QACzC+B,UAAQ,EACRC,aAAa,UAHf,UAKE,wBAAQhC,MAAM,UAAUiC,UAAQ,EAACC,QAAM,EAAvC,4BAGCT,EAAUR,KAAI,gBAAG1D,EAAH,EAAGA,KAAMmE,EAAT,EAASA,IAAT,OACb,wBAAkB1B,MAAO0B,EAAzB,SACGnE,GADUmE,YAMnB,wBAAQP,UAAU,SAAlB,4BClDO,SAASgB,IACtB,IAAM1E,EAASiC,YAAYrB,GAE3B,OACE,0BAAS8C,UAAU,SAAnB,UACE,wCACA,oBAAIA,UAAU,cAAd,SACGJ,OAAOC,OAAOvD,GAAQwD,KAAI,SAACC,GAAD,OACzB,oBAAIC,UAAU,QAAd,SACA,cAAC,IAAD,CAAMiB,GAAIvF,EAAOM,WAAW+D,EAAMlE,IAAKmE,UAAU,aAAjD,SACC,sBAAKA,UAAU,kBAAf,UACE,qBAAKkB,IAAKnB,EAAMlD,KAAMsE,IAAI,KAC1B,sBAAKnB,UAAU,eAAf,UACE,6BAAKD,EAAM3D,OACX,8BAAI2D,EAAMjD,QAAQqC,OAAlB,uBANsBY,EAAMlE,SAarC,cAAC,IAAD,CACEoF,GAAIvF,EAAOK,gBACXiE,UAAU,iCAFZ,iCCrBS,SAASoB,IACtB,IAAM9E,EAASiC,YAAYrB,GACrBG,EAAUkB,YAAYf,GAEtBuC,EAAQzD,EADI+E,cAAZzE,SAEA0E,EAAkBvB,EAAMjD,QAAQgD,KAAI,SAAC9C,GAAD,OAAYK,EAAQL,MAE9D,OACE,oCACE,qBAAKkE,IAAKnB,EAAMlD,KAAMsE,IAAI,GAAGnB,UAAU,eACvC,yCAAYD,EAAM3D,QAClB,oBAAI4D,UAAU,eAAd,SACGsB,EAAgBxB,KAAI,SAACP,GAAD,OACnB,oBAAIS,UAAU,OAAd,SACE,cAAC,IAAD,CAAMiB,GAAIvF,EAAOE,UAAU2D,EAAK1D,IAAhC,SAAsC0D,EAAKnD,QADnBmD,EAAK1D,SAKnC,cAAC,IAAD,CAAMoF,GAAG,eAAejB,UAAU,gBAAlC,kCCpBS,SAASuB,EAAT,GAAuB,IAAP1F,EAAM,EAANA,GAEvBwD,EADQd,YAAYR,GACPlC,GAFgB,EAGLoC,oBAAS,GAHJ,mBAG5BuD,EAH4B,KAGnBC,EAHmB,KAKnC,OACE,6BACE,wBAAQzB,UAAU,OAAOC,QAAS,SAAChB,GAAD,OAAOwC,GAAYD,IAArD,SACGA,EAAUnC,EAAKvB,KAAOuB,EAAKxB,UCPrB,SAAS6D,IACtB,IAAMrE,EAAUkB,YAAYf,GAC5BmE,QAAQC,IAAI,aAAcvE,GAFG,IAGrBL,EAAWqE,cAAXrE,OACR2E,QAAQC,IAAI,YAAY5E,GACxB,IAAMuC,EAAOlC,EAAQL,GAGrB,OAFA2E,QAAQC,IAAI,WAAYrC,GAGtB,oCACE,6BAAKA,EAAKnD,OACV,oBAAI4D,UAAU,aAAd,SACGT,EAAKhC,QAAQuC,KAAI,SAACjE,GAAD,OAChB,cAAC0F,EAAD,CAAe1F,GAAIA,GAARA,QAGf,cAAC,IAAD,CAAMoF,GAAIvF,EAAOC,eAAgBqE,UAAU,gBAA3C,kCCjBS,SAAS6B,IACtB,IAAMxE,EAAUkB,YAAYf,GAC5B,OACE,0BAASwC,UAAU,SAAnB,UACE,yCACA,oBAAIA,UAAU,eAAd,SACGJ,OAAOC,OAAOxC,GAASyC,KAAI,SAACP,GAAD,OAC1B,cAAC,IAAD,CAAoB0B,GAAIvF,EAAOE,UAAU2D,EAAK1D,IAA9C,SACE,oBAAImE,UAAU,OAAd,SAAsBT,EAAKnD,QADlBmD,EAAK1D,SAKpB,cAAC,IAAD,CAAMoF,GAAIvF,EAAOC,eAAgBqE,UAAU,SAA3C,gCCDS,SAAS8B,IACtB,OACE,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAASb,GAAIvF,EAAOO,cAAe8F,gBAAgB,SAAnD,sBAIF,6BACE,cAAC,IAAD,CAASd,GAAIvF,EAAOI,eAAgBiG,gBAAgB,SAApD,uBAIF,6BACE,cAAC,IAAD,CAASd,GAAIvF,EAAOC,eAAgBoG,gBAAgB,SAApD,6BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,cAACE,EAAD,YAOV,SAASD,IACP,IAAIE,EAAQC,cAEZ,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAI,UAAKG,EAAMH,KAAX,QAAX,SACE,cAACxB,EAAD,MAEF,cAAC,IAAD,CAAOwB,KAAI,UAAKG,EAAMH,KAAX,aAAX,SACE,cAACZ,EAAD,MAEF,cAAC,IAAD,CAAOY,KAAI,UAAKG,EAAMH,MAAtB,SACE,cAAChB,EAAD,WAOV,SAASkB,IACP,IAAIC,EAAQC,cAEZ,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAI,UAAKG,EAAMH,KAAX,QAAX,SACE,cAAChE,EAAD,MAEF,cAAC,IAAD,CAAOgE,KAAI,UAAKG,EAAMH,KAAX,YAAX,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAI,UAAKG,EAAMH,MAAtB,SACE,cAACH,EAAD,WC/EKQ,kBAAe,CAC5BC,QAAS,CACPhG,OAAQiG,EACRlF,QAASmF,EACT9E,MAAO+E,KCHXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAACf,EAAD,QAGJgB,SAASC,eAAe,W","file":"static/js/main.ac926be0.chunk.js","sourcesContent":["const ROUTES = {\n  newQuizRoute: () => \"/quizzes/new\",\n  quizRoute: (id) => `/quizzes/${id}`,\n  quizzesRoute: () => \"/quizzes\",\n  newTopicRoute: () => \"/topics/new\",\n  topicRoute: (id) => `/topics/${id}`,\n  topicsRoute: () => \"/topics\",\n};\n\nexport default ROUTES;\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const topicsSlice = createSlice({\n    name: 'topics',\n    initialState: {topics: {}},\n    reducers: {\n        addTopic: (state, action) => {\n          const {topicId, name, icon} = action.payload;\n          state.topics[topicId] = {\n            id: topicId,\n            name: name,\n            icon,\n            quizIds: []\n          };\n          return state;\n        },\n        addQuizId: (state, action) => {\n            const {topicId, quizId} = action.payload;\n            state.topics[topicId].quizIds.push(quizId);\n        }\n    }\n  });\n  \n  export const selectTopics = (state) => {\n    return state.topics.topics;\n  } \n\n  export const { addTopic, addQuizId } = topicsSlice.actions;\n  export default topicsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\nimport { addQuizId } from '../topics/topicsSlice';\n\nexport const quizzesSlice = createSlice({\n    name: 'quizzes',\n    initialState: {quizzes: {}},\n    reducers: {\n        addQuiz: (state, action) => {\n            const {quizId, name, topicId, cardIds} = action.payload;\n            state.quizzes[quizId] = {\n                id: quizId,\n                name: name,\n                topicId: topicId,\n                cardIds: cardIds\n            }\n            return state;\n        }\n        \n    }\n});\n\nexport const addQuizAddQuizId = (quiz) => {\n    const { quizId, topicId } = quiz;\n    return (dispatch) => {\n      dispatch(quizzesSlice.actions.addQuiz(quiz));\n      dispatch(addQuizId({ quizId: quizId, topicId: topicId }));\n    };\n  };\n\nexport const { addQuiz } = quizzesSlice.actions;\nexport default quizzesSlice.reducer;\nexport const selectQuizzes = state => state.quizzes.quizzes;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const cardsSlice = createSlice({\n    name: 'cards',\n    initialState: {cards: {}},\n    reducers: {\n        addCard: (state, action) => {\n            const { cardId, front, back } = action.payload;\n            state.cards[cardId] = {\n                id: cardId,\n                front: front,\n                back: back\n            }\n        }\n    }\n});\n\nexport const { addCard } = cardsSlice.actions;\nexport default cardsSlice.reducer;\nexport const selectCard = state => state.cards.cards;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from '../features/topics/topicsSlice';\nimport { addQuizAddQuizId } from '../features/quizzes/quizzesSlice';\nimport { addCard } from '../features/cards/cardsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    \n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n    cards.forEach((card) => {\n\t\t\tlet cardId = uuidv4();\n\t\t\tcardIds.push(cardId);\n\t\t\tdispatch(addCard({ cardId: cardId, front: card.front, back: card.back }));\n\t\t});\n\n    \n    dispatch(addQuizAddQuizId({quizId: uuidv4(), name: name, topicId: topicId, cardIds: cardIds}));\n\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export const BOOK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/book.svg\";\nexport const BALLOON_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/balloon.svg\";\nexport const BIRD_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/bird.svg\";\nexport const CALENDAR_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/calendar.svg\";\nexport const CLOVER_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/clover.svg\";\nexport const CRAYONS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/crayons.svg\";\nexport const DATA_FLOW_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/data-flow.svg\";\nexport const FENCE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/fence.svg\";\nexport const GRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/grill.svg\";\nexport const HAND_DRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hand-drill.svg\";\nexport const HAT_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hat.svg\";\nexport const INTERNET_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/internet.svg\";\nexport const LADYBUG_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/ladybug.svg\";\nexport const LEAVES_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/leaves.svg\";\nexport const MEDICINE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/medicine.svg\";\nexport const NEST_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/nest.svg\";\nexport const SHUTTLECOCK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/shuttlecock.svg\";\nexport const SPADE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/spade.svg\";\nexport const STATISTICS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/statistics.svg\";\nexport const SUN_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/sun.svg\";\nexport const TREE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/tree.svg\";\n\nexport const ALL_ICONS = [\n  {\n    url: BOOK_ICON,\n    name: \"Book\",\n  },\n  {\n    url: BALLOON_ICON,\n    name: \"Balloon\",\n  },\n  {\n    url: BIRD_ICON,\n    name: \"Bird\",\n  },\n  {\n    url: CALENDAR_ICON,\n    name: \"Calendar\",\n  },\n  {\n    url: CLOVER_ICON,\n    name: \"Clover\",\n  },\n  {\n    url: CRAYONS_ICON,\n    name: \"Crayons\",\n  },\n  {\n    url: DATA_FLOW_ICON,\n    name: \"Data\",\n  },\n  {\n    url: FENCE_ICON,\n    name: \"Fence\",\n  },\n  {\n    url: GRILL_ICON,\n    name: \"Grill\",\n  },\n  {\n    url: HAND_DRILL_ICON,\n    name: \"Hand\",\n  },\n  {\n    url: HAT_ICON,\n    name: \"Hat\",\n  },\n  {\n    url: INTERNET_ICON,\n    name: \"Internet\",\n  },\n  {\n    url: LADYBUG_ICON,\n    name: \"Ladybug\",\n  },\n  {\n    url: LEAVES_ICON,\n    name: \"Leaves\",\n  },\n  {\n    url: MEDICINE_ICON,\n    name: \"Medicine\",\n  },\n  {\n    url: NEST_ICON,\n    name: \"Nest\",\n  },\n  {\n    url: SHUTTLECOCK_ICON,\n    name: \"Shuttlecock\",\n  },\n  {\n    url: SPADE_ICON,\n    name: \"Spade\",\n  },\n  {\n    url: STATISTICS_ICON,\n    name: \"Statistics\",\n  },\n  {\n    url: SUN_ICON,\n    name: \"Sun\",\n  },\n  {\n    url: TREE_ICON,\n    name: \"Tree\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\nimport { addTopic } from '../features/topics/topicsSlice';\nimport { useDispatch } from \"react-redux\";\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    let uniqueId = uuidv4();\n    dispatch(addTopic({\n        topicId: uniqueId,\n        name: name,\n        icon: icon\n      }));\n\n    // dispatch your add topic action here\n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from 'react-redux';\nimport { selectTopics } from './topicsSlice';\n\n\nexport default function Topics() {\n  const topics = useSelector(selectTopics); // replace this with a call to your selector to select all the topics in state\n\n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n      <ul className=\"topics-list\">\n        {Object.values(topics).map((topic) => (\n          <li className=\"topic\" key={topic.id}>\n          <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\n           <div className=\"topic-container\">\n             <img src={topic.icon} alt=\"\" />\n             <div className=\"text-content\">\n               <h2>{topic.name}</h2>\n               <p>{topic.quizIds.length} Quizzes</p>\n             </div>\n           </div>\n         </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from 'react-redux';\nimport { selectTopics } from './topicsSlice';\nimport { selectQuizzes } from '../quizzes/quizzesSlice';\n\nexport default function Topic() {\n  const topics = useSelector(selectTopics);\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" />\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { selectCard } from './cardsSlice';\n\nexport default function Card({ id }) {\n  const cards = useSelector(selectCard);\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n","import { Link, useParams } from \"react-router-dom\";\nimport Card from \"../cards/Card\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from 'react-redux';\nimport { selectQuizzes } from './quizzesSlice'; \n\nexport default function Quiz() {\n  const quizzes = useSelector(selectQuizzes); \n  console.log('quizzes = ', quizzes)\n  const { quizId } = useParams();\n  console.log('quizId = ',quizId)\n  const quiz = quizzes[quizId];\n  console.log('quiz is ', quiz);\n\n  return (\n    <section>\n      <h1>{quiz.name}</h1>\n      <ul className=\"cards-list\">\n        {quiz.cardIds.map((id) => (\n          <Card key={id} id={id} />\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from 'react-redux';\nimport { selectQuizzes } from './quizzesSlice';\n\nexport default function Quizzes() {\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to get all the quizzes in state\n  return (\n    <section className=\"center\">\n      <h1>Quizzes</h1>\n      <ul className=\"quizzes-list\">\n        {Object.values(quizzes).map((quiz) => (\n          <Link key={quiz.id} to={ROUTES.quizRoute(quiz.id)}>\n            <li className=\"quiz\">{quiz.name}</li>\n          </Link>\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button\">\n        Create New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport NewQuizForm from \"../components/NewQuizForm\";\nimport NewTopicForm from \"../components/NewTopicForm\";\nimport Topics from \"../features/topics/Topics\";\nimport Topic from \"../features/topics/Topic\";\nimport Quiz from \"../features/quizzes/Quiz\";\nimport Quizzes from \"../features/quizzes/Quizzes\";\nimport ROUTES from \"./routes\";\n\nexport default function App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\n              Topics\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\n              Quizzes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\n              New Quiz\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/topics\">\n          <TopicsRoutes />\n        </Route>\n        <Route path=\"/quizzes\">\n          <QuizRoutes />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction TopicsRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewTopicForm />\n        </Route>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Topics />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction QuizRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewQuizForm />\n        </Route>\n        <Route path={`${match.path}/:quizId`}>\n          <Quiz />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Quizzes />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport topicsReducer from '../features/topics/topicsSlice';\nimport quizzesReducer from '../features/quizzes/quizzesSlice';\nimport cardsReducer from '../features/cards/cardsSlice';\n\nexport default configureStore({\n  reducer: {\n    topics: topicsReducer,\n    quizzes: quizzesReducer,\n    cards: cardsReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}